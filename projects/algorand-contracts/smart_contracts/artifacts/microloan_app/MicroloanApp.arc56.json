{
    "name": "MicroloanApp",
    "structs": {},
    "methods": [
        {
            "name": "requestLoan",
            "args": [
                {
                    "type": "string",
                    "name": "principal",
                    "desc": "Loan amount in microALGO"
                },
                {
                    "type": "string",
                    "name": "termDays",
                    "desc": "Loan term in days"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Request a loan",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "approveLoan",
            "args": [
                {
                    "type": "string",
                    "name": "loanId",
                    "desc": "Loan ID to approve"
                },
                {
                    "type": "string",
                    "name": "installmentAmount",
                    "desc": "Monthly installment amount in microALGO"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Approve a loan (admin only)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "drawdown",
            "args": [
                {
                    "type": "string",
                    "name": "loanId",
                    "desc": "Loan ID to drawdown"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Drawdown approved loan",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "repay",
            "args": [
                {
                    "type": "string",
                    "name": "loanId",
                    "desc": "Loan ID to repay"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Repay loan installment",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "fundApp",
            "args": [
                {
                    "type": "string",
                    "name": "amount",
                    "desc": "Amount to fund in microALGO"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Fund the application with ALGO (admin only)",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "markDefault",
            "args": [
                {
                    "type": "string",
                    "name": "loanId",
                    "desc": "Loan ID to mark as default"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Mark loan as defaulted",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getLoanInfo",
            "args": [
                {
                    "type": "string",
                    "name": "loanId",
                    "desc": "Loan ID to get info"
                }
            ],
            "returns": {
                "type": "string",
                "desc": "Loan info as string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get loan information",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getTotalLoans",
            "args": [],
            "returns": {
                "type": "string",
                "desc": "Total loans count as string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get total loans count",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getAdmin",
            "args": [],
            "returns": {
                "type": "string",
                "desc": "Admin address as string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Get admin address",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        95,
                        113,
                        124,
                        151,
                        160,
                        169,
                        178,
                        187,
                        196
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        212
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        98,
                        116,
                        127,
                        154,
                        163,
                        172,
                        181,
                        190,
                        199
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMQogICAgYnl0ZWNibG9jayAweDE1MWY3Yzc1MDAwMTMwCiAgICAvLyBzbWFydF9jb250cmFjdHMvbWljcm9sb2FuX2FwcC9jb250cmFjdC5hbGdvLnRzOjMKICAgIC8vIGV4cG9ydCBjbGFzcyBNaWNyb2xvYW5BcHAgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdAMTQKICAgIHB1c2hieXRlc3MgMHgxYzdkMTE2OCAweGVkM2ZmZjM5IDB4NWU5NzRmNDYgMHg3OTdjMzI1NSAweDBlMWQxMTA5IDB4MmNkYmQ1NTcgMHhhZDBhNzRiMyAweDk0ODU5NWNkIDB4ODk1MDVmYTggLy8gbWV0aG9kICJyZXF1ZXN0TG9hbihzdHJpbmcsc3RyaW5nKXN0cmluZyIsIG1ldGhvZCAiYXBwcm92ZUxvYW4oc3RyaW5nLHN0cmluZyl2b2lkIiwgbWV0aG9kICJkcmF3ZG93bihzdHJpbmcpdm9pZCIsIG1ldGhvZCAicmVwYXkoc3RyaW5nKXZvaWQiLCBtZXRob2QgImZ1bmRBcHAoc3RyaW5nKXZvaWQiLCBtZXRob2QgIm1hcmtEZWZhdWx0KHN0cmluZyl2b2lkIiwgbWV0aG9kICJnZXRMb2FuSW5mbyhzdHJpbmcpc3RyaW5nIiwgbWV0aG9kICJnZXRUb3RhbExvYW5zKClzdHJpbmciLCBtZXRob2QgImdldEFkbWluKClzdHJpbmciCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX3JlcXVlc3RMb2FuX3JvdXRlQDMgbWFpbl9hcHByb3ZlTG9hbl9yb3V0ZUA0IG1haW5fZHJhd2Rvd25fcm91dGVANSBtYWluX3JlcGF5X3JvdXRlQDYgbWFpbl9mdW5kQXBwX3JvdXRlQDcgbWFpbl9tYXJrRGVmYXVsdF9yb3V0ZUA4IG1haW5fZ2V0TG9hbkluZm9fcm91dGVAOSBtYWluX2dldFRvdGFsTG9hbnNfcm91dGVAMTAgbWFpbl9nZXRBZG1pbl9yb3V0ZUAxMQoKbWFpbl9hZnRlcl9pZl9lbHNlQDE4OgogICAgLy8gc21hcnRfY29udHJhY3RzL21pY3JvbG9hbl9hcHAvY29udHJhY3QuYWxnby50czozCiAgICAvLyBleHBvcnQgY2xhc3MgTWljcm9sb2FuQXBwIGV4dGVuZHMgQ29udHJhY3QgewogICAgcHVzaGludCAwIC8vIDAKICAgIHJldHVybgoKbWFpbl9nZXRBZG1pbl9yb3V0ZUAxMToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9taWNyb2xvYW5fYXBwL2NvbnRyYWN0LmFsZ28udHM6NzgKICAgIC8vIHB1YmxpYyBnZXRBZG1pbigpOiBzdHJpbmcgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NTAwMDAKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9nZXRUb3RhbExvYW5zX3JvdXRlQDEwOgogICAgLy8gc21hcnRfY29udHJhY3RzL21pY3JvbG9hbl9hcHAvY29udHJhY3QuYWxnby50czo2OQogICAgLy8gcHVibGljIGdldFRvdGFsTG9hbnMoKTogc3RyaW5nIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1MDAwMTMwCiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fZ2V0TG9hbkluZm9fcm91dGVAOToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9taWNyb2xvYW5fYXBwL2NvbnRyYWN0LmFsZ28udHM6NjAKICAgIC8vIHB1YmxpYyBnZXRMb2FuSW5mbyhsb2FuSWQ6IHN0cmluZyk6IHN0cmluZyB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIHB1c2hieXRlcyAweDE1MWY3Yzc1MDAwOTZlNmY3NDVmNjY2Zjc1NmU2NAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX21hcmtEZWZhdWx0X3JvdXRlQDg6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbWljcm9sb2FuX2FwcC9jb250cmFjdC5hbGdvLnRzOjUxCiAgICAvLyBwdWJsaWMgbWFya0RlZmF1bHQobG9hbklkOiBzdHJpbmcpOiB2b2lkIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9mdW5kQXBwX3JvdXRlQDc6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbWljcm9sb2FuX2FwcC9jb250cmFjdC5hbGdvLnRzOjQzCiAgICAvLyBwdWJsaWMgZnVuZEFwcChhbW91bnQ6IHN0cmluZyk6IHZvaWQgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX3JlcGF5X3JvdXRlQDY6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbWljcm9sb2FuX2FwcC9jb250cmFjdC5hbGdvLnRzOjM1CiAgICAvLyBwdWJsaWMgcmVwYXkobG9hbklkOiBzdHJpbmcpOiB2b2lkIHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKbWFpbl9kcmF3ZG93bl9yb3V0ZUA1OgogICAgLy8gc21hcnRfY29udHJhY3RzL21pY3JvbG9hbl9hcHAvY29udHJhY3QuYWxnby50czoyNwogICAgLy8gcHVibGljIGRyYXdkb3duKGxvYW5JZDogc3RyaW5nKTogdm9pZCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYXBwcm92ZUxvYW5fcm91dGVANDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9taWNyb2xvYW5fYXBwL2NvbnRyYWN0LmFsZ28udHM6MTkKICAgIC8vIHB1YmxpYyBhcHByb3ZlTG9hbihsb2FuSWQ6IHN0cmluZywgaW5zdGFsbG1lbnRBbW91bnQ6IHN0cmluZyk6IHZvaWQgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX3JlcXVlc3RMb2FuX3JvdXRlQDM6CiAgICAvLyBzbWFydF9jb250cmFjdHMvbWljcm9sb2FuX2FwcC9jb250cmFjdC5hbGdvLnRzOjkKICAgIC8vIHB1YmxpYyByZXF1ZXN0TG9hbihwcmluY2lwYWw6IHN0cmluZywgdGVybURheXM6IHN0cmluZyk6IHN0cmluZyB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NTAwMDEzMAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0AxNDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9taWNyb2xvYW5fYXBwL2NvbnRyYWN0LmFsZ28udHM6MwogICAgLy8gZXhwb3J0IGNsYXNzIE1pY3JvbG9hbkFwcCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTgKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiABASYBBxUffHUAATAxG0EAuYIJBBx9EWgE7T//OQRel09GBHl8MlUEDh0RCQQs29VXBK0KdLMElIWVzQSJUF+oNhoAjgkAaABfAFYATQBEADsAIAAVAAOBAEMxGRREMRhEgAYVH3x1AACwIkMxGRREMRhEKLAiQzEZFEQxGESADxUffHUACW5vdF9mb3VuZLAiQzEZFEQxGEQiQzEZFEQxGEQiQzEZFEQxGEQiQzEZFEQxGEQiQzEZFEQxGEQiQzEZFEQxGEQosCJDMRlA/4gxGBREIkM=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}